name: Build DigiLivolo software

on:
  push:
    branches: [ main ]
    tags:
      - "v*.*.*"
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.sys.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false

      matrix:
        sys:
          - { os: ubuntu-latest,  shell: bash, c_compiler: gcc, binary_orig: digilivolo, binary_target: digilivolo-linux-x86_64 }
          - { os: ubuntu-latest,  shell: bash, c_compiler: clang }
          - { os: windows-latest, shell: 'msys2 {0}', c_compiler: gcc, binary_orig: digilivolo.exe, binary_target: digilivolo-win-x86_64.exe }
          - { os: windows-latest, shell: pwsh, c_compiler: gcc }
          - { os: windows-latest, shell: pwsh, c_compiler: clang }
        build_type: [Release]
    defaults:
      run:
        shell: ${{ matrix.sys.shell }}

    steps:
    - uses: ConorMacBride/install-package@v1
      with:
        apt: libudev-dev
          
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Install Ninja
      if: matrix.sys.shell != 'msys2 {0}'
      id: ninja
      uses: turtlesec-no/get-ninja@main

    - name: 'Setup MSYS2'
      if: matrix.sys.shell == 'msys2 {0}'
      uses: msys2/setup-msys2@v2
      with:
        msystem: UCRT64
        update: true
        install: >-
          git
          make
          mingw-w64-ucrt-x86_64-gcc
        pacboy: >-
          toolchain:p
          cmake:p
          ninja:p

    - name: Configure CMake
      run: >
        cmake -B software/build
        -DCMAKE_C_COMPILER=${{ matrix.sys.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DUSE_SYSTEM_HIDAPI=false
        -G Ninja
        -S software

    - name: Build
      run: cmake --build software/build

    - name: Rename binary
      if: ${{ matrix.sys.binary_target != '' }}
      shell: bash
      run: |
        mv software/build/${{ matrix.sys.binary_orig }} software/build/${{ matrix.sys.binary_target }}
        ls -l software/build/${{ matrix.sys.binary_target }}
        file software/build/${{ matrix.sys.binary_target }}

    - name: Make and upload release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/') && matrix.sys.binary_target != ''
      with:
        fail_on_unmatched_files: false
        generate_release_notes: true        
        make_latest: true
        files: software/build/${{ matrix.sys.binary_target }}
